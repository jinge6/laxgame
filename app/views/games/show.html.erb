<img id="moveToSpot" hidden="true" src="<%= image_url('moveoption.png') %>">
<table>
  <tbody>
    <tr>
      <td>
        <div id="bigscreen">
          <div id="shotclock" class="bigScreenDisplay"></div>
          <div id="scoreboard" class="bigScreenDisplay"></div>
          <div id="gametime" class="bigScreenDisplay"></div>
        </div>
      </td>
    </tr>
    <tr>
      <td>
        <div id="bigscreen">
          <div id="instructions" class="bigScreenDisplay"></div>
        </div>
      </td>
    </tr>
    <tr>
      <td>
        <div id="laxGame">
          <img id="startButton" src="/assets/fo.png" />
        </div>
      </td>
    </tr>
  </tbody>
</table>
<div>
  <button id="draggableButton">Drag Player</button>
</div>
<div><%= link_to 'Back', games_path %></div>

<script>
  $(document).ready(function ()
  {
    var initialize = function()
    {
      var fieldBackgroundAnim = new gf.animation({url: "/assets/laxfield.jpg", width: 800, height: 400});

      $('#laxGame').append("<div id='container' style='width: 800px; height: 400px;'>");
      container = $("#container");
      field = gf.addGroup(container, "fieldContainer", {width: 800, height: 400});

      fieldBackground = gf.addSprite(field, "fieldBackground", {width: 800, height: 400});
      gf.setAnimation(fieldBackground, fieldBackgroundAnim);

      $("#shotclock").text("10");
      $("#scoreboard").text("0");
      $("#gametime").text("0");

      var player = addMoveable(field, currentMove, "player", 3, 3, MYTEAM);
      gf.setAnimation(player, myTeamPlayerAnim.stand);

      var player2 = addMoveable(field, currentMove, "player2", 6, 3, OPPOSITION);
      gf.setAnimation(player2, oppositionTeamPlayerAnim.stand);

      var ball = addMoveable(field, currentMove, "ball", 4, 4);
      gf.setAnimation(ball, ballAnim.groundball);

      $("#startButton").remove();
      container.css("display", "block");
    }

    var myTeamPlayerAnim = {
      stand: new gf.animation({
        url: "/assets/standing_sprite.png"
      }),
      moveable: new gf.animation({
        url: "/assets/standing_sprite.png"
      }),
      runSideways:  new gf.animation({
        url:    "/assets/running_sprite.png",
        numberOfFrames: 3,
        rate: 100
      }),
      runTowards:  new gf.animation({
        url:    "/assets/running_sprite_towards.png",
        numberOfFrames: 3,
        rate: 100
      }),
      runAway:  new gf.animation({
        url:    "/assets/running_sprite_away.png",
        numberOfFrames: 3,
        rate: 100
      })
    };

    var oppositionTeamPlayerAnim = {
      stand: new gf.animation({
        url: "/assets/standing_sprite_2.png"
      }),
      moveable: new gf.animation({
        url: "/assets/standing_sprite_2.png"
      }),
      runSideways:  new gf.animation({
        url:    "/assets/running_sprite_2.png",
        numberOfFrames: 3,
        rate: 100
      }),
      runTowards:  new gf.animation({
        url:    "/assets/running_sprite_towards_2.png",
        numberOfFrames: 3,
        rate: 100
      }),
      runAway:  new gf.animation({
        url:    "/assets/running_sprite_away_2.png",
        numberOfFrames: 3,
        rate: 100
      })

    };

    var ballAnim = {
      groundball: new gf.animation({
        url: "/assets/ball.png"
      })
    };

    function movePlayers()
    {
      for (var i = 0; i < moves.length; i++)
      {
        if (moves[i][0] == currentMove)
        {
          var div = $('#' + moves[i][1] + '_start');
          gf.transform(div, {flipH: orientSpriteDirection(moves[i])});
          if (moves[i][1].indexOf("ball") == -1)
          {
            var animType = div.data("myteam") == true ? myTeamPlayerAnim : oppositionTeamPlayerAnim;
            var runType = getSpriteRunType(animType, moves[i]);
            gf.spriteMove(div, runType, animType.stand, {
              y: getCoordinate(moves[i][2]),
              x: getCoordinate(moves[i][3]),
              removeWhenDone: true,
              replaceWithDiv: moves[i][1]
            });
          }
          else
          {
            gf.spriteMove(div, ballAnim.groundball, ballAnim.groundball, {
              y: getCoordinate(moves[i][2]),
              x: getCoordinate(moves[i][3]),
              removeWhenDone: true,
              replaceWithDiv: moves[i][1]
            });
          }
        }
      }
    }

    function getSpriteRunType(animType, moveArrayRow)
    {
      var startRow = 0;
      var finishRow = moveArrayRow[2];
      var startCol = 0;
      var finishCol = moveArrayRow[3];
      var lastMove = previousMove(moveArrayRow[1]);

      for (var i=0; i<moves.length; i++)
      {
        if (moves[i][0] == lastMove && moves[i][1] == moveArrayRow[1])
        {
          startCol = moves[i][3];
          startRow = moves[i][2];
          break;
        }
      }
      if (startCol != finishCol)
      {
        return animType.runSideways
      }
      else if (startRow < finishRow)
      {
        return animType.runTowards
      }
      else
      {
        return animType.runAway
      }
    }

    function addMoveableStartingPointBack(id, startingMove, myTeam)
    {

      var row = getMovesRowOrColumn(id, startingMove, "row");
      var col = getMovesRowOrColumn(id, startingMove, "col");

      var y = getCoordinate(row);
      var x = getCoordinate(col);
      var $moveable = $("<div id='" + id + "_start' style='position: absolute;'></div>");
      $moveable.data("myteam", myTeam);

      if (id.indexOf("ball") == -1)
      {
        var animType = $moveable.data("myteam") == true ? myTeamPlayerAnim : oppositionTeamPlayerAnim;
        gf.setAnimation($moveable, animType.stand);
      }
      else
      {
        gf.setAnimation($moveable, ballAnim.groundball);
      }
      $moveable.css({height: moveablesSize, width: moveablesSize, left: x, top: y}).zIndex(1000);
      $moveable.appendTo($("#"+id).parent());
    }

    var gameLoop = function()
    {

    }

    var clock = function() {
      var shotclockTime = parseInt($("#shotclock").text());
      var gameTime = parseInt($("#gametime").text());

      if (shotclockTime <= 0)
      {
        movePlayers();
        $("#shotclock").text(10);
        currentMove++;
        $("#instructions").text("Make your next move!! Choose wisely");

      }
      else
      {
        $("#shotclock").text(shotclockTime-1);
        $("#gametime").text(gameTime+1);
      }
    }

    gf.addCallback(gameLoop, 30);
    gf.addCallback(clock, 1000);

    $("#startButton").click(function() {
      gf.startGame(initialize);
    });

    $("#draggableButton").click(function() {
      currentMove++;
      setDraggable($("#player"));
      setDraggable($("#player2"));
      setDraggable($("#ball"));
    });

    function setDraggable(div)
    {
      div.css( 'cursor', 'move' );
      div.draggable({containment: 'gf_group', revert: "invalid"});
      div.parent().droppable({
        accept: ".gf_sprite",
        activate: dragStarted,
        drop: dragDrop
      });
    }

    function dragStarted(e, ui)
    {
      if (ui.draggable[0].id.indexOf("ball") == -1)
      {
        setContainment(ui.draggable[0].id, previousMove(ui.draggable[0].id));
        $('.moveOption').fadeIn(200);
      }
    }
    function dragDrop(e,ui)
    {
      var id = ui.draggable[0].id;
      $("#" + id).attr('class', 'remove');

      var xPos = parseInt(ui.draggable[0].style["left"].replace("px", ""));
      var yPos = parseInt(ui.draggable[0].style["top"].replace("px", ""));
      var newXPos = Math.round(xPos / moveablesSize) * moveablesSize;
      var newYPos = Math.round(yPos / moveablesSize) * moveablesSize;
      var col = (newXPos / moveablesSize);
      var row = (newYPos / moveablesSize);
      $('.moveOption').fadeOut(200);
      $('.moveOption').promise().done(function (){$('.moveOption').remove()});

      // add the moved player or ball back
      var moveable = addMoveable($("#"+id).parent(), currentMove, id, row, col, $("#" + id).data("myteam"));
      if (id.indexOf("ball") == -1)
      {
        var animType = moveable.data("myteam") == true ? myTeamPlayerAnim : oppositionTeamPlayerAnim;
        gf.setAnimation(moveable, animType.stand);
      }
      else
      {
        gf.setAnimation(moveable, ballAnim.groundball);
      }
      moveable.css({opacity: 0.3});
      addMoveableStartingPointBack(id, previousMove(id), $("#"+id).data("myteam"));
      $(".remove").remove();
      setDraggable($("#"+id));
    }

  });

</script>
